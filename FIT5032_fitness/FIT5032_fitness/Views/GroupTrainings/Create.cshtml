@model FIT5032_fitness.Models.GroupTraining

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #join-button {
        font-size: 15px;
        background: #b6121d;
        padding: 8px 20px;
        border-color: #b6121d;
    }
</style>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <h3> Join Training Group</h3>
    <hr />
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Error
        </div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (User.Identity.IsAuthenticated)
            {
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            }
            else
            {
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            }
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Join" class="btn btn-primary  btn-md" id="join-button" />
        </div>
    </div>

    <div class="form-actions no-color">
        @Html.ActionLink("Back to List", "BookingClass")
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
